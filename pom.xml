<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.bannmann</groupId>
        <artifactId>base</artifactId>
        <version>1.3</version>
    </parent>

    <groupId>org.puretemplate</groupId>
    <artifactId>puretemplate</artifactId>

    <version>5.0.0-beta.3-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>PureTemplate</name>
    <description>Template engine that strictly enforces model-view separation</description>

    <licenses>
        <license>
            <name>The BSD License</name>
            <url>https://raw.githubusercontent.com/bannmann/puretemplate/develop/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/bannmann/puretemplate.git</connection>
        <developerConnection>scm:git:git@github.com:bannmann/puretemplate.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/bannmann/puretemplate/tree/master</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://${ossrh.host}/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <javadoc.output.directory.final>${project.build.directory}/apidocs</javadoc.output.directory.final>
        <javadoc.output.directory.temp>${project.build.directory}/apidocs-temp</javadoc.output.directory.temp>
        <javadoc.sources.directory>${project.build.directory}/generated-sources/delombok-for-javadoc</javadoc.sources.directory>
        <lombok.core.version>1.18.22</lombok.core.version>
        <lombok.plugin.version>1.18.20.0</lombok.plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <mizool.version>0.45</mizool.version>
        <ossrh.host>s01.oss.sonatype.org</ossrh.host>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <silverchain.outputDirectory>${project.build.directory}/generated-sources/silverchain</silverchain.outputDirectory>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.mizool</groupId>
                <artifactId>mizool-core</artifactId>
                <version>${mizool.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.antlr</groupId>
                        <artifactId>ST4</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr-runtime</artifactId>
                <version>3.5.2</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apiguardian</groupId>
                <artifactId>apiguardian-api</artifactId>
                <version>1.1.2</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.8.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.kohsuke.metainf-services</groupId>
                <artifactId>metainf-services</artifactId>
                <version>1.8</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apiguardian</groupId>
            <artifactId>apiguardian-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kohsuke.metainf-services</groupId>
            <artifactId>metainf-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.amashchenko.maven.plugin</groupId>
                    <artifactId>gitflow-maven-plugin</artifactId>
                    <configuration>
                        <gitFlowConfig>
                            <productionBranch>main</productionBranch>
                        </gitFlowConfig>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>maven-replacer-plugin</artifactId>
                    <version>1.4.1</version>
                </plugin>
                <plugin>
                    <groupId>io.reformanda.semper</groupId>
                    <artifactId>dependencyversion-maven-plugin</artifactId>
                    <version>1.0.1</version>
                    <executions>
                        <execution>
                            <id>set-all</id>
                            <goals>
                                <goal>set-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <id>default-jar</id>
                            <configuration>
                                <archive>
                                    <manifestEntries>
                                        <Automatic-Module-Name>org.puretemplate</Automatic-Module-Name>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
                        <sourcepath>${javadoc.sources.directory};${silverchain.outputDirectory}</sourcepath>
                        <doclint>none</doclint>
                        <reportOutputDirectory>${javadoc.output.directory.final}</reportOutputDirectory>
                        <links>
                            <link>https://javadoc.io/doc/org.apiguardian/apiguardian-api/${org.apiguardian:apiguardian-api:jar.version}/</link>
                            <link>https://javadoc.io/doc/com.google.code.findbugs/jsr305/${com.google.code.findbugs:jsr305:jar.version}/</link>
                        </links>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <configuration>
                        <nexusUrl>https://${ossrh.host}/</nexusUrl>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.github.bannmann.maven.silverchain</groupId>
                <artifactId>silverchain-maven-plugin</artifactId>
                <version>0.2</version>
                <configuration>
                    <inputFile>src/main/silverchain/puretemplate.ag</inputFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.reformanda.semper</groupId>
                <artifactId>dependencyversion-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.5.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <!-- Force Surefire to (only) run JUnit tests despite our inherited TestNG dependency. -->
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <configuration>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>hack-javadoc</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>delombok</goal>
                                    </goals>
                                    <phase>process-sources</phase>
                                    <configuration>
                                        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
                                        <outputDirectory>${javadoc.sources.directory}</outputDirectory>
                                        <addOutputDirectory>false</addOutputDirectory>
                                        <formatPreferences>
                                            <javaLangAsFQN>skip</javaLangAsFQN>
                                        </formatPreferences>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>com.google.code.maven-replacer-plugin</groupId>
                        <artifactId>maven-replacer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>hack-antlr-output</id>
                                <!--
                                    Work around the fact that ANTLR doesn't support generating non-public classes.
                                    See https://github.com/antlr/antlr4/issues/972
                                -->
                                <goals>
                                    <goal>replace</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration>
                                    <includes>
                                        <include>target/generated-sources/antlr3/org/puretemplate/*.java</include>
                                    </includes>
                                    <variableTokenValueMap>public class=class</variableTokenValueMap>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-modified-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <classifier>javadoc</classifier>
                                    <classesDirectory>${javadoc.output.directory.final}</classesDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <!-- also see copy-resources execution "overwrite-javadoc-indexes" -->
                            <execution>
                                <id>generate-main-api-indexes</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <reportOutputDirectory>${javadoc.output.directory.temp}</reportOutputDirectory>
                                    <sourceFileExcludes>
                                        <sourceFileExclude>org/puretemplate/fs/*.java</sourceFileExclude>
                                        <sourceFileExclude>**/state*/*.java</sourceFileExclude>
                                    </sourceFileExcludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-normal</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                            <execution>
                                <id>attach-javadocs</id>
                                <configuration>
                                    <!--
                                        This execution is inherited from the super POM. It invokes Javadoc another time,
                                        negating the "overwrite-javadoc-indexes" hack, so we need to disable it. Our replacement
                                        is the maven-jar-plugin execution "attach-modified-javadocs".
                                    -->
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>overwrite-javadoc-indexes</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <!--
                                        By overwriting the overview page and various indexes, we avoid spamming lists with
                                        dozens of 'stateXX' packages, but still keep the docs for all state classes fully linked
                                        between each other and available to IDEs.
                                        Similarly, "technically public but not our official API" classes get Javadoc for IDEs,
                                        but don't appear in any lists.
                                    -->
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${javadoc.output.directory.final}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${javadoc.output.directory.temp}/apidocs</directory>
                                            <includes>
                                                <include>/*</include>
                                                <include>**/package-*.html</include>
                                                <include>**/class-use/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release-profile</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.sortpom</groupId>
                        <artifactId>sortpom-maven-plugin</artifactId>
                        <configuration>
                            <verifyFail>Stop</verifyFail>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sign</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
